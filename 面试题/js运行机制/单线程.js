//先了解什么是并发和并行,同步和异步
//并发是通过时间切片,来实现的,每一部分时间用来执行不同的任务
//并行是多个任务同时执行
//同步就是按照顺序执行,并且前一个任务没执行完,就不会执行下一个任务(在JS中同步容易造成线程阻塞)
//异步就是把一些需要等待的的任务先加入任务队列,然后去执行其他的任务,等执行完其他任务,再去执行那些被挂起的任务
//JS是单线程语言
//同步(顺序执行)
console.log(1);
console.log(2);
console.log(3);

// //单线程同步阻塞
// console.log("start");
// for(let i = 0;i <= 10000;i++) {
//     console.log(i);
// }
// //当一个任务执行时间过长就会导致阻塞
// console.log("end");

//异步(不会按照顺序执行,延时结束加入任务队列,谁先加入任务队列谁先执行)
// setTimeout(() => {
//     console.log(1);
// },1000);
// setTimeout(() => {
//     console.log(2);
// },10);
// setTimeout(() => {
//     console.log(3);
// },100);

//同步优先执行,等待同步任务执行完毕,再执行任务队列(任务队列讲究先进先出)
// console.log(1);
// setTimeout(() => {
//     console.log(2);
// },100);
// setTimeout(() => {
//     console.log(3);
// },10);
// console.log(4);
